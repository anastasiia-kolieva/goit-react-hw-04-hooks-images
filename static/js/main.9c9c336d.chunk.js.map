{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js","App.module.css"],"names":["module","exports","Searchbar","onSubmit","useState","searchWord","setSearchWord","className","s","SearchForm","event","preventDefault","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","value","onChange","target","ImageGalleryItem","src","alt","imageClick","largeSrc","ImageGalleryItemImage","data-url","onClick","ImageGallery","imagesArray","handlerImageClick","map","image","webformatURL","tags","largeImageURL","id","Button","onClickHandle","buttonWrapper","modalRoot","document","querySelector","Modal","onClose","children","useEffect","window","addEventListener","handelKeyDown","removeEventListener","code","createPortal","Overlay","currentTarget","App","setImagesArray","currentPage","setCurrentPage","searchQuery","setSearchQuery","isLoading","setIsLoading","pageCords","setPageCords","showModal","setShowModal","clickedImageUrl","setClickedImageUrl","fetchImages","cords","documentElement","scrollHeight","scrollTo","top","behavior","fetch","then","responce","json","data","prevImages","hits","prevPage","catch","alert","text","finally","toggleModal","nodeName","dataset","url","console","log","loaderWrapper","color","height","width","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9c9c336d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__X7P_0\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__29pQF\",\"ImageGalleryItem-image\":\"ImageGalleryItem_ImageGalleryItem-image__2B74Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonWrapper\":\"Button_buttonWrapper__VwTxz\",\"Button\":\"Button_Button__2HXlA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3sccM\",\"Modal\":\"Modal_Modal__3preN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3GF2R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1E9fd\",\"SearchForm\":\"Searchbar_SearchForm__1VC_W\",\"SearchFormButton\":\"Searchbar_SearchFormButton__cn-0n\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__1cAuR\",\"SearchFormInput\":\"Searchbar_SearchFormInput__7omCA\",\"SearchForm-input\":\"Searchbar_SearchForm-input__3xbfr\"};","import { useState } from 'react';\nimport s from './Searchbar.module.css';\n\nexport default function Searchbar({ onSubmit }) {\n  const [searchWord, setSearchWord] = useState('');\n\n  const handlerChange = event => {\n    setSearchWord(event.target.value);\n  };\n\n  const handelSubmit = event => {\n    event.preventDefault();\n\n    onSubmit(searchWord);\n\n    setSearchWord('');\n  };\n\n  return (\n    <header className={s.Searchbar}>\n      <form className={s.SearchForm} onSubmit={handelSubmit}>\n        <button type=\"submit\" className={s.SearchFormButton}>\n          <span className={s.SearchFormButtonLabel}>Search</span>\n        </button>\n\n        <input\n          className={s.SearchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={searchWord}\n          onChange={handlerChange}\n        />\n      </form>\n    </header>\n  );\n}\n// class Searchbar extends Component {\n//   state = {\n//     searchWord: '',\n//   };\n\n//   handlerChange = event => {\n//     this.setState({ searchWord: event.target.value });\n//   };\n\n//   handelSubmit = event => {\n//     event.preventDefault();\n\n//     this.props.onSubmit(this.state.searchWord);\n\n//     this.setState({ searchWord: '' });\n//   };\n\n//   render() {\n//     return (\n//       <header className={s.Searchbar}>\n//         <form className={s.SearchForm} onSubmit={this.handelSubmit}>\n//           <button type=\"submit\" className={s.SearchFormButton}>\n//             <span className={s.SearchFormButtonLabel}>Search</span>\n//           </button>\n\n//           <input\n//             className={s.SearchFormInput}\n//             type=\"text\"\n//             autoComplete=\"off\"\n//             autoFocus\n//             placeholder=\"Search images and photos\"\n//             value={this.state.searchWord}\n//             onChange={this.handlerChange}\n//           />\n//         </form>\n//       </header>\n//     );\n//   }\n// }\n\n// export default Searchbar;\n","import PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({ src, alt, imageClick, largeSrc }) => {\n  return (\n    <li className={s.ImageGalleryItem}>\n      <img\n        className={s.ImageGalleryItemImage}\n        src={src}\n        alt={alt}\n        data-url={largeSrc}\n        onClick={imageClick}\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport s from './ImageGallery.module.css';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\n\nconst ImageGallery = ({ imagesArray, handlerImageClick }) => {\n  return (\n    <ul className={s.ImageGallery}>\n      {imagesArray.map(image => (\n        <ImageGalleryItem\n          key={image.id}\n          src={image.webformatURL}\n          alt={image.tags}\n          imageClick={handlerImageClick}\n          largeSrc={image.largeImageURL}\n        />\n      ))}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  imagesArray: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default ImageGallery;\n","import s from './Button.module.css';\n\nconst Button = ({ onClickHandle }) => {\n  return (\n    <div className={s.buttonWrapper}>\n      <button type=\"button\" onClick={onClickHandle} className={s.Button}>\n        Load More\n      </button>\n    </div>\n  );\n};\n\nexport default Button;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ onClose, children }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handelKeyDown);\n    return window.removeEventListener('keydown', handelKeyDown);\n  }, []);\n\n  const handelKeyDown = event => {\n    if (event.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handelOverlayClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={s.Overlay} onClick={handelOverlayClick}>\n      <div className={s.Modal}>{children}</div>\n    </div>,\n    modalRoot,\n  );\n}\n\n// class Modal extends Component {\n//   componentDidMount() {\n//     // слушатель событий на window, для закрытия модалки при нажатии на Esc\n//     window.addEventListener('keydown', this.handelKeyDown);\n//   }\n\n//   //   при размонтировании снимать слушатель.Почистила\n//   componentWillUnmount() {\n//     window.removeEventListener('keydown', this.handelKeyDown);\n//   }\n\n//   handelKeyDown = event => {\n//     if (event.code === 'Escape') {\n//       this.props.onClose();\n//     }\n//   };\n\n//   //   закрытие модалки при клике на серый фон\n//   handelOverlayClick = event => {\n//     if (event.currentTarget === event.target) {\n//       this.props.onClose();\n//     }\n//   };\n\n//   render() {\n//     return createPortal(\n//       <div className={s.Overlay} onClick={this.handelOverlayClick}>\n//         <div className={s.Modal}>{this.props.children}</div>\n//       </div>,\n//       modalRoot,\n//     );\n//   }\n// }\n\n// export default Modal;\n","import { useState, useEffect } from 'react';\nimport Loader from 'react-loader-spinner';\nimport { alert } from '@pnotify/core';\nimport '@pnotify/core/dist/PNotify.css';\nimport './App.module.css';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\nimport s from './App.module.css';\n\n// ключь API\nconst keyApi = '18681025-f668a3aca189dfba87ba57015';\n\nexport default function App() {\n  const [imagesArray, setImagesArray] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [pageCords, setPageCords] = useState(0);\n  const [showModal, setShowModal] = useState(false);\n  const [clickedImageUrl, setClickedImageUrl] = useState('');\n\n  useEffect(() => {\n    if (!searchQuery) {\n      // Первый рендер, searchQuery это пустая строка, не делаем fetch\n      return;\n    }\n    setImagesArray([]);\n    fetchImages();\n  }, [searchQuery]);\n\n  const onChangeSearchWord = searchWord => {\n    setSearchQuery(searchWord);\n    setCurrentPage(1);\n    setImagesArray([]);\n  };\n\n  const fetchImages = () => {\n    const cords = document.documentElement.scrollHeight;\n    setIsLoading(true);\n    setPageCords(cords);\n\n    window.scrollTo({\n      top: pageCords,\n      behavior: 'smooth',\n    });\n\n    fetch(\n      `https://pixabay.com/api/?q=${searchQuery}&page=${currentPage}&key=${keyApi}&image_type=photo&orientation=horizontal&per_page=12`,\n    )\n      .then(responce => responce.json())\n      .then(data => {\n        setImagesArray(prevImages => [...prevImages, ...data.hits]);\n        setCurrentPage(prevPage => prevPage + 1);\n      })\n      .catch(() =>\n        alert({\n          text: 'Error! Please try again.',\n        }),\n      )\n      .finally(() => setIsLoading(false));\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const onImageClick = event => {\n    if (event.target.nodeName !== 'IMG') {\n      console.log('Did not push on the image!');\n      return;\n    }\n    setClickedImageUrl(event.target.dataset.url);\n    toggleModal();\n  };\n\n  return (\n    <div className={s.App}>\n      <Searchbar onSubmit={onChangeSearchWord} />\n      <ImageGallery\n        imagesArray={imagesArray}\n        handlerImageClick={onImageClick}\n      />\n      {isLoading && (\n        <div className={s.loaderWrapper}>\n          <Loader type=\"Hearts\" color=\"#00BFFF\" height={80} width={80} />\n        </div>\n      )}\n      {imagesArray.length > 0 && <Button onClickHandle={fetchImages} />}\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <img\n            src={clickedImageUrl}\n            alt=\"\"\n            width=\"1200\"\n            height=\"800\"\n            onClick={toggleModal}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\n// class App extends Component {\n//   state = {\n//     imagesArray: [],\n//     currentPage: 1,\n//     searchQuery: '',\n//     isLoading: false,\n//     // верхние кординаты страницы(для скрола)\n//     pageCords: 0,\n//     showModal: false,\n//     clickedImageUrl: '',\n//   };\n\n//   componentDidUpdate(prevProps, prevState) {\n//     // необходимо при пролистывании(нажатия на кнопку\"догрузить\"). Сохранение слова-поиска асинхронно, а функция\n//     // фетча синхронна, потому выполняется первее.\n//     // вызов функции fetchImages будет только тогда когда в searchImage будет новое значение\n//     if (prevState.searchQuery !== this.state.searchQuery) {\n//       this.setState({ imagesArray: [] }, this.fetchImages);\n//     }\n//   }\n\n//   onChangeSearchWord = searchWord => {\n//     // когда получаем слово для поиска картинки, сохраняем в стейт это слово для последующего\n//     // перелистывания(нажатия на кнопку\"догрузить\")\n//     // сбрасываем в исходное состояние currentPage и imagesArray, в случае нового ввода нового слова поиска\n//     this.setState({ searchQuery: searchWord, currentPage: 1, imagesArray: [] });\n//   };\n\n//   fetchImages = () => {\n//     const { currentPage, searchQuery, pageCords } = this.state;\n//     const cords = document.documentElement.scrollHeight;\n//     // загрузщик + новые кординаты для скрола\n//     this.setState({ isLoading: true, pageCords: cords });\n//     // scroll\n//     window.scrollTo({\n//       top: pageCords,\n//       behavior: 'smooth',\n//     });\n\n//     fetch(\n//       `https://pixabay.com/api/?q=${searchQuery}&page=${currentPage}&key=${keyApi}&image_type=photo&orientation=horizontal&per_page=12`,\n//     )\n//       .then(responce => responce.json())\n//       .then(data => {\n//         this.setState(prevState => ({\n//           imagesArray: [...prevState.imagesArray, ...data.hits],\n//           // увеличить отображаемую страницуна +1\n//           currentPage: prevState.currentPage + 1,\n//         }));\n//       })\n//       .catch(() =>\n//         alert({\n//           text: 'Error! Please try again.',\n//         }),\n//       )\n//       .finally(() => this.setState({ isLoading: false }));\n//   };\n\n//   // метод для инверсии значения showModal\n//   toggleModal = () => {\n//     this.setState(state => ({\n//       showModal: !state.showModal,\n//     }));\n//   };\n\n//   onImageClick = event => {\n//     // Проверка клика ИМЕННО по изображению\n//     if (event.target.nodeName !== 'IMG') {\n//       console.log('Did not push on the image!');\n//       return;\n//     }\n\n//     // получила ссылку на нажатую картинку\n//     // записываю ссылку на нажатую картинку в state.clickedImageUrl\n//     this.setState({ clickedImageUrl: event.target.dataset.url });\n//     // открываю модалку\n//     this.toggleModal();\n//   };\n\n//   render() {\n//     const { imagesArray, isLoading, showModal, clickedImageUrl } = this.state;\n//     return (\n//       <div className={s.App}>\n//         <Searchbar onSubmit={this.onChangeSearchWord} />\n//         <ImageGallery\n//           imagesArray={imagesArray}\n//           handlerImageClick={this.onImageClick}\n//         />\n//         {isLoading && (\n//           <div className={s.loaderWrapper}>\n//             <Loader type=\"Hearts\" color=\"#00BFFF\" height={80} width={80} />\n//           </div>\n//         )}\n//         {imagesArray.length > 0 && <Button onClickHandle={this.fetchImages} />}\n//         {showModal && (\n//           <Modal onClose={this.toggleModal}>\n//             <img\n//               src={clickedImageUrl}\n//               alt=\"\"\n//               width=\"1200\"\n//               height=\"800\"\n//               onClick={this.toggleModal}\n//             />\n//           </Modal>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1oZ9n\",\"loaderWrapper\":\"App_loaderWrapper__3npx8\"};"],"sourceRoot":""}